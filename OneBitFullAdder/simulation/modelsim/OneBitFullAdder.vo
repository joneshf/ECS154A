// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/16/2013 18:45:55"

// 
// Device: Altera EP2AGX45CU17I3 Package UFBGA358
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module OneBitFullAdder (
	S,
	A,
	B,
	C_IN,
	C_OUT);
output 	S;
input 	A;
input 	B;
input 	C_IN;
output 	C_OUT;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S~output_o ;
wire \C_OUT~output_o ;
wire \C_IN~input_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \inst1~combout ;
wire \inst4~0_combout ;


arriaii_io_obuf \S~output (
	.i(\inst1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

arriaii_io_obuf \C_OUT~output (
	.i(\inst4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C_OUT~output_o ),
	.obar());
// synopsys translate_off
defparam \C_OUT~output .bus_hold = "false";
defparam \C_OUT~output .open_drain_output = "false";
// synopsys translate_on

arriaii_io_ibuf \C_IN~input (
	.i(C_IN),
	.ibar(gnd),
	.o(\C_IN~input_o ));
// synopsys translate_off
defparam \C_IN~input .bus_hold = "false";
defparam \C_IN~input .simulate_z_as = "z";
// synopsys translate_on

arriaii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

arriaii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

arriaii_lcell_comb inst1(
// Equation(s):
// \inst1~combout  = !\C_IN~input_o  $ (!\A~input_o  $ (\B~input_o ))

	.dataa(!\C_IN~input_o ),
	.datab(!\A~input_o ),
	.datac(!\B~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst1.extended_lut = "off";
defparam inst1.lut_mask = 64'h6969696969696969;
defparam inst1.shared_arith = "off";
// synopsys translate_on

arriaii_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = (!\C_IN~input_o  & (\A~input_o  & \B~input_o )) # (\C_IN~input_o  & ((\B~input_o ) # (\A~input_o )))

	.dataa(!\C_IN~input_o ),
	.datab(!\A~input_o ),
	.datac(!\B~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst4~0 .extended_lut = "off";
defparam \inst4~0 .lut_mask = 64'h1717171717171717;
defparam \inst4~0 .shared_arith = "off";
// synopsys translate_on

assign S = \S~output_o ;

assign C_OUT = \C_OUT~output_o ;

endmodule
